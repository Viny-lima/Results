<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>La tarea se canceló.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Se ha eliminado la secuencia</value>
  </data>
  <data name="InboundMessageOnly" xml:space="preserve">
    <value>Esta operación solo es adecuada para los mensajes entrantes.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>No se encuentra el método '{0}/{1}' en {2} por lo siguientes motivos: {3}</value>
  </data>
  <data name="ReservedPropertyName" xml:space="preserve">
    <value>El nombre de esta propiedad está reservado por las especificaciones JSON-RPC o esta biblioteca.</value>
  </data>
  <data name="OutboundMessageOnly" xml:space="preserve">
    <value>Esta operación solo es adecuada para los mensajes salientes.</value>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>La respuesta no es un error.</value>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Mensaje de error inesperado al procesar JSON-RPC: {0}</value>
  </data>
  <data name="CancellationTokenMustBeLastParameter" xml:space="preserve">
    <value>Un CancellationToken solo se permite como último parámetro.</value>
  </data>
  <data name="ElementsAlreadyPrefetched" xml:space="preserve">
    <value>Esta enumeración ya ha capturado previamente los elementos una vez.</value>
  </data>
  <data name="UsableOnceOnly" xml:space="preserve">
    <value>Esta operación solo se puede realizar una vez en este objeto.</value>
  </data>
  <data name="TypedArgumentsLengthMismatch" xml:space="preserve">
    <value>La longitud de esta lista debe ser igual a la longitud de la lista de argumentos.</value>
  </data>
  <data name="UnsupportedEventHandlerTypeOnClientProxyInterface" xml:space="preserve">
    <value>Tipo de controlador de eventos no admitido en "{0}". Solo se admiten EventHandler o EventHandler&lt;T&gt;.</value>
  </data>
  <data name="ParameterObjectsNotSupportedInJsonRpc10" xml:space="preserve">
    <value>JSON-RPC 1.0 no admite argumentos con nombre (parámetros pasados dentro de un objeto). Utilice argumentos posicionales (matrices de parámetros) o establezca la versión de protocolo en 2.0.</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>Se debe proporcionar un objeto de destino si, y solo si, el método no es estático.</value>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>El mensaje de JSON-RPC entrante no se ajusta a un patrón reconocido.</value>
  </data>
  <data name="UnexpectedResponseWithNoMatchingRequest" xml:space="preserve">
    <value>Se recibió una respuesta sin enviar una solicitud.</value>
  </data>
  <data name="TextEncoderNotApplicable" xml:space="preserve">
    <value>La codificación de texto no es compatible porque el formateador "{0}" no implementa "{1}".</value>
  </data>
  <data name="MarshalableInterfaceHasProperties" xml:space="preserve">
    <value>No se pueden calcular las referencias de las interfaces con propiedades.</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Todas las sobrecargas e invalidaciones del método "{0}" deben compartir un valor común para {1}.{2}.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>No se pudo leer el elemento JSON RPC de la secuencia con {0}: {1}</value>
  </data>
  <data name="ConnectionDropped" xml:space="preserve">
    <value>La conexión de JSON-RPC con la parte remota se perdió antes de que se pudiera completar la solicitud.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Se recibió una solicitud para ejecutar '{0}', pero no tiene objeto de devolución de llamada. Se va a eliminar la solicitud.</value>
  </data>
  <data name="FormatterConfigurationLockedAfterJsonRpcAssigned" xml:space="preserve">
    <value>La configuración está bloqueada porque este formateador ya se ha asociado a una instancia de JsonRpc.</value>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Se requiere un número entero positivo.</value>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>La secuencia debe poderse escribir.</value>
  </data>
  <data name="ResponseUnexpectedFormat" xml:space="preserve">
    <value>La respuesta tiene un formato no esperado. Solo se admiten errores y resultados: {0}</value>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>JSON RPC no debe ser NULL.</value>
  </data>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>Tanto readable como writable son nulos.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>El búfer está vacío. Llame primero al método asincrónico para llenarlo.</value>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Se alcanzó el final de la secuencia.</value>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>El tamaño del encabezado del mensaje supera el tamaño máximo admitido.</value>
  </data>
  <data name="ResponseSerializationFailure" xml:space="preserve">
    <value>No se pudo serializar la respuesta.</value>
  </data>
  <data name="MarshalableInterfaceNotDisposable" xml:space="preserve">
    <value>Las interfaces serializadas deben extender IDisposable.</value>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Error al deserializar el elemento JSON RPC entrante '{0}': {1}</value>
  </data>
  <data name="JsonRpcMethodAndIgnoreAttributesFound" xml:space="preserve">
    <value>Se han encontrado jsonRpcMethodAttribute y JsonRpcIgnoreAttribute en conflicto en el mismo método: {0}.</value>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>No se encontró ningún método con el nombre "{0}".</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>Los parámetros {0} y {1} superan la longitud de la matriz.</value>
  </data>
  <data name="UnsupportedPropertiesOnClientProxyInterface" xml:space="preserve">
    <value>No se admiten las propiedades para las interfaces de servicio.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>Se requiere un número entero no negativo.</value>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>Los parámetros de {0} no son compatibles con los argumentos proporcionados en la solicitud.</value>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>Primero debe iniciarse la escucha.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>El parámetro no tiene la forma de un único objeto</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>Esto no se puede hacer una vez que haya iniciado la escucha.</value>
  </data>
  <data name="MarshalableInterfaceHasEvents" xml:space="preserve">
    <value>No se pueden calcular las referencias de las interfaces con eventos.</value>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Esta operación no se permite después de que se haya iniciado la escucha de mensajes.</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>No se pudo analizar el encabezado Content-Length en un número entero positivo.</value>
  </data>
  <data name="RelayAlreadySet" xml:space="preserve">
    <value>Ya se ha establecido la conexión de retransmisión.</value>
  </data>
  <data name="FailureDeserializingRpcResult" xml:space="preserve">
    <value>Error al deserializar el resultado de JSON-RPC para el tipo {0} con {1}: {2}</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>La tarea no se ha completado.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} tiene parámetros ref o out y esto no se admite</value>
  </data>
  <data name="FailureDeserializingRpcArgument" xml:space="preserve">
    <value>Error al deserializar el argumento JSON-RPC con el nombre "{0}" y la posición {1} en el tipo "{2}": {3}</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Esta operación no se permite antes de que se haya iniciado la escucha de mensajes.</value>
  </data>
  <data name="NotSupportedWithoutMultiplexingStream" xml:space="preserve">
    <value>No se admiten los flujos o canalizaciones fuera de banda en esta configuración. ¿Ha establecido un elemento MultiplexingStream en el formateador?</value>
  </data>
  <data name="RequiredArgumentMissing" xml:space="preserve">
    <value>No se proporcionó un argumento para un parámetro requerido.</value>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Los métodos .NET "{0}" y "{1}" no pueden asignar ambos el mismo nombre de método de solicitud: "{2}".</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>La secuencia debe poderse leer.</value>
  </data>
  <data name="ErrorWritingJsonRpcMessage" xml:space="preserve">
    <value>Error al escribir el mensaje de JSON RPC: {0}: {1}</value>
  </data>
  <data name="EnumValueNotRecognized" xml:space="preserve">
    <value>El valor {0} no se encuentra entre los miembros reconocidos o admitidos del tipo de enumeración.</value>
  </data>
  <data name="MarshaledObjectInResponseOrNotificationError" xml:space="preserve">
    <value>Este objeto con seguimiento no debe formar parte de ninguna respuesta o notificación.</value>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>{0} parámetro(s) (se excluirá cualquier CancellationToken): {1}, pero la solicitud suministra {2}</value>
  </data>
  <data name="CannotBeCalledAfterGetAsyncEnumerator" xml:space="preserve">
    <value>Esta acción no se puede realizar después de haber llamado a GetAsyncEnumerator.</value>
  </data>
  <data name="UnsupportedJsonRpcProtocolVersion" xml:space="preserve">
    <value>Versión de protocolo JSON-RPC no admitida {0}. Las versiones de protocolo admitidas son: {1}</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>Se lanzó una excepción fatal desde el método del servidor {0}: {1}</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Token inesperado (token) '{0}' al analizar el encabezado.</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>Ya se ha registrado un método con el mismo nombre y parámetros equivalentes.</value>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Error al escribir el resultado del elemento JSON RPC: {0}: {1}</value>
  </data>
  <data name="ClientProxyTypeArgumentMustBeAnInterface" xml:space="preserve">
    <value>"{0}" no es una interfaz.</value>
  </data>
  <data name="UnrecognizableMessage" xml:space="preserve">
    <value>No se puede reconocer el mensaje entrante como uno de los tipos de mensaje de JSON-RPC 2.0 definidos.</value>
  </data>
  <data name="MarshaledObjectInNotificationError" xml:space="preserve">
    <value>Este objeto con seguimiento no se puede incluir en una notificación. Solo se admiten los mensajes que incluyen una propiedad "id".</value>
  </data>
  <data name="UnsupportedGenericMethodsOnClientProxyInterface" xml:space="preserve">
    <value>No se admiten métodos genéricos.</value>
  </data>
  <data name="FindIProgressOfTError" xml:space="preserve">
    <value>No se puede convertir el tipo dado en IProgress&lt;T&gt;</value>
  </data>
  <data name="UnknownTokenToMarshaledObject" xml:space="preserve">
    <value>Este objeto remoto ya no existe.</value>
  </data>
  <data name="UnsupportedMethodReturnTypeOnClientProxyInterface" xml:space="preserve">
    <value>El método "{0}" tiene el tipo de devolución no admitido "{1}". Solo se admiten los métodos de devolución de tareas.</value>
  </data>
</root>