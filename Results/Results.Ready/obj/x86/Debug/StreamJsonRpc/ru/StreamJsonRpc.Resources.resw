<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>Задача отменена.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Поток был удален</value>
  </data>
  <data name="InboundMessageOnly" xml:space="preserve">
    <value>Эта операция применима только для входящих сообщений.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>Не удалось найти метод "{0}/{1}" в {2} по следующим причинам: {3}</value>
  </data>
  <data name="ReservedPropertyName" xml:space="preserve">
    <value>Это имя свойства зарезервировано в спецификации JSON-RPC или этой библиотеке.</value>
  </data>
  <data name="OutboundMessageOnly" xml:space="preserve">
    <value>Эта операция применима только для исходящих сообщений.</value>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>Отклик не является ошибкой.</value>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Непредвиденная ошибка при обработке сообщения JSON-RPC: {0}</value>
  </data>
  <data name="CancellationTokenMustBeLastParameter" xml:space="preserve">
    <value>CancellationToken может указываться только в качестве последнего параметра.</value>
  </data>
  <data name="ElementsAlreadyPrefetched" xml:space="preserve">
    <value>Это перечисление уже предварительно выбирало элементы.</value>
  </data>
  <data name="UsableOnceOnly" xml:space="preserve">
    <value>Эту операцию можно выполнить только один раз для этого объекта.</value>
  </data>
  <data name="TypedArgumentsLengthMismatch" xml:space="preserve">
    <value>Длина этого списка должна быть равна длине списка аргументов.</value>
  </data>
  <data name="UnsupportedEventHandlerTypeOnClientProxyInterface" xml:space="preserve">
    <value>Неподдерживаемый тип обработчика событий в "{0}". Поддерживаются только EventHandler и EventHandler&lt;T&gt;.</value>
  </data>
  <data name="ParameterObjectsNotSupportedInJsonRpc10" xml:space="preserve">
    <value>JSON-RPC 1.0 не поддерживает именованные аргументы (параметры, передаваемые в объекте). Используйте позиционные аргументы (массивы параметров) или установите версию протокола 2.0.</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>Необходимо предоставить целевой объект, только если метод не статичный.</value>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>Входящее сообщение JSON-RPC не соответствует распознанному шаблону.</value>
  </data>
  <data name="UnexpectedResponseWithNoMatchingRequest" xml:space="preserve">
    <value>Был получен ответ без отправки запроса.</value>
  </data>
  <data name="TextEncoderNotApplicable" xml:space="preserve">
    <value>Кодировка текста не поддерживается, так как модуль форматирования "{0}" не реализует "{1}".</value>
  </data>
  <data name="MarshalableInterfaceHasProperties" xml:space="preserve">
    <value>Интерфейсы со свойствами невозможно маршалировать.</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Все перегрузки и переопределения метода "{0}" должны использовать общее значение {1}.{2}.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>Ошибка чтения RPC JSON из потока: {0}, {1}</value>
  </data>
  <data name="ConnectionDropped" xml:space="preserve">
    <value>Соединение JSON-RPC с удаленной стороной было утрачено до того, как удалось выполнить запрос.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Получен запрос на выполнение "{0}", но объект обратного вызова не существует. Запрос будет отменен.</value>
  </data>
  <data name="FormatterConfigurationLockedAfterJsonRpcAssigned" xml:space="preserve">
    <value>Конфигурация заблокирована, так как этот модуль форматирования уже связан с экземпляром JsonRpc.</value>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Требуется положительное целое число.</value>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>Поток должен быть доступным для записи.</value>
  </data>
  <data name="ResponseUnexpectedFormat" xml:space="preserve">
    <value>Непредвиденный формат ответа. Поддерживаются только ошибки и результаты: {0}</value>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>RPC JSON не должно иметь значение null.</value>
  </data>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>Свойства для чтения и записи имеют значение null.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>Буфер пуст. Сначала вызовите метод async, чтобы заполнить его.</value>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Достигнут конец потока.</value>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>Размер заголовка сообщения превышает предельный.</value>
  </data>
  <data name="ResponseSerializationFailure" xml:space="preserve">
    <value>Не удалось выполнить сериализацию ответа.</value>
  </data>
  <data name="MarshalableInterfaceNotDisposable" xml:space="preserve">
    <value>Маршалированные интерфейсы должны расширять IDisposable.</value>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Ошибка десериализации входящего RPC JSON "{0}": {1}</value>
  </data>
  <data name="JsonRpcMethodAndIgnoreAttributesFound" xml:space="preserve">
    <value>Конфликтующие атрибуты JsonRpcMethodAttribute и JsonRpcIgnoreAttribute найдены у одного и того же метода: {0}.</value>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>Метод с именем "{0}" не найден.</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>Параметры {0} и {1} превышают длину массива.</value>
  </data>
  <data name="UnsupportedPropertiesOnClientProxyInterface" xml:space="preserve">
    <value>Свойства интерфейсов служб не поддерживаются.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>Требуется неотрицательное целое число.</value>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>Параметры {0} несовместимы с аргументами, переданными в запросе.</value>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>Сначала нужно запустить прослушивание.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>Параметр не имеет форму одиночного объекта</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>После запуска прослушивания сделать это невозможно.</value>
  </data>
  <data name="MarshalableInterfaceHasEvents" xml:space="preserve">
    <value>Интерфейсы с событиями невозможно маршалировать.</value>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Эта операция не разрешена после начала ожидания сообщений.</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Ошибка при анализе заголовка Content-Length в положительное целое число.</value>
  </data>
  <data name="RelayAlreadySet" xml:space="preserve">
    <value>Подключение к ретрансляции уже установлено.</value>
  </data>
  <data name="FailureDeserializingRpcResult" xml:space="preserve">
    <value>Десериализация результата JSON-RPC в тип {0} завершилась сбоем. Тип исключения: {1}, сообщение: {2}</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>Задача не завершена.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} имеет параметры REF или OUT, что не поддерживается</value>
  </data>
  <data name="FailureDeserializingRpcArgument" xml:space="preserve">
    <value>Не удалось десериализировать аргумент JSON-RPC с именем "{0}" и позицией {1} в тип "{2}": {3}</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Эта операция не разрешена до начала ожидания сообщений.</value>
  </data>
  <data name="NotSupportedWithoutMultiplexingStream" xml:space="preserve">
    <value>Потоки или каналы, находящиеся вне диапазона, не поддерживаются в этой конфигурации. Вы установили MultiplexingStream для модуля форматирования?</value>
  </data>
  <data name="RequiredArgumentMissing" xml:space="preserve">
    <value>Аргумент для обязательного параметра не указан.</value>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Методы .NET "{0}" и "{1}" не могут одновременно быть сопоставлены с одним и тем же именем метода запроса: "{2}".</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>Поток должен быть читаемым.</value>
  </data>
  <data name="ErrorWritingJsonRpcMessage" xml:space="preserve">
    <value>Произошла ошибка при записи сообщения RPC JSON. {0}: {1}</value>
  </data>
  <data name="EnumValueNotRecognized" xml:space="preserve">
    <value>Значение {0} не является допустимым для распознанных или поддерживаемых членов типа перечисления.</value>
  </data>
  <data name="MarshaledObjectInResponseOrNotificationError" xml:space="preserve">
    <value>Этот отслеживаемый объект не должен входить ни в один ответ и ни в одно уведомление.</value>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>Число параметров в {0} (исключая любые CancellationToken): {1}; в запросе же указано {2}.</value>
  </data>
  <data name="CannotBeCalledAfterGetAsyncEnumerator" xml:space="preserve">
    <value>Это невозможно сделать после вызова GetAsyncEnumerator.</value>
  </data>
  <data name="UnsupportedJsonRpcProtocolVersion" xml:space="preserve">
    <value>Версия протокола JSON-RPC не поддерживается {0}. Доступные версии протокола: {1}</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>Метод сервера {0} вызвал неустранимое исключение: {1}</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Непредвиденная лексема "{0}" при анализе заголовка.</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>Метод с таким именем и аналогичными параметрами уже зарегистрирован.</value>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Ошибка при записи результата RPC JSON: {0}, {1}</value>
  </data>
  <data name="ClientProxyTypeArgumentMustBeAnInterface" xml:space="preserve">
    <value>"{0}" не является интерфейсом.</value>
  </data>
  <data name="UnrecognizableMessage" xml:space="preserve">
    <value>Не удалось распознать входящее сообщение как относящееся к одному из типов сообщений, определенных JSON-RPC 2.0.</value>
  </data>
  <data name="MarshaledObjectInNotificationError" xml:space="preserve">
    <value>Этот отслеживаемый объект не может быть включен в уведомление. Поддерживаются только сообщения, включающие свойство "ID".</value>
  </data>
  <data name="UnsupportedGenericMethodsOnClientProxyInterface" xml:space="preserve">
    <value>Общие методы не поддерживаются.</value>
  </data>
  <data name="FindIProgressOfTError" xml:space="preserve">
    <value>Не удалось привести указанный тип к IProgress&lt;T&gt;</value>
  </data>
  <data name="UnknownTokenToMarshaledObject" xml:space="preserve">
    <value>Этот удаленный объект больше не существует.</value>
  </data>
  <data name="UnsupportedMethodReturnTypeOnClientProxyInterface" xml:space="preserve">
    <value>Тип возвращаемого значения метода "{0}" ("{1}") не поддерживается. Поддерживаются только методы, возвращающие задачи.</value>
  </data>
</root>