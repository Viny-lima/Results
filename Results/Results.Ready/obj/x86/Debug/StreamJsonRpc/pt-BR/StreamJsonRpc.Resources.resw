<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>A tarefa foi cancelada.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>O fluxo foi descartado</value>
  </data>
  <data name="InboundMessageOnly" xml:space="preserve">
    <value>Esta operação é apropriada apenas para mensagens de entrada.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>Não é possível localizar o método '{0}/{1}' em {2} pelos seguintes motivos: {3}</value>
  </data>
  <data name="ReservedPropertyName" xml:space="preserve">
    <value>Este nome de propriedade está reservado pela especificação JSON-RPC ou esta biblioteca.</value>
  </data>
  <data name="OutboundMessageOnly" xml:space="preserve">
    <value>Esta operação é apropriada apenas para mensagens de saída.</value>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>A resposta não é um erro.</value>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Erro inesperado ao processar a mensagem JSON-RPC: {0}</value>
  </data>
  <data name="CancellationTokenMustBeLastParameter" xml:space="preserve">
    <value>Um Token de Cancelamento é permitido somente como o último parâmetro.</value>
  </data>
  <data name="ElementsAlreadyPrefetched" xml:space="preserve">
    <value>Essa enumeração já teve elementos pré-buscados uma vez.</value>
  </data>
  <data name="UsableOnceOnly" xml:space="preserve">
    <value>Esta operação pode ser realizada apenas uma vez neste objeto.</value>
  </data>
  <data name="TypedArgumentsLengthMismatch" xml:space="preserve">
    <value>O tamanho desta lista precisa ser igual ao tamanho da lista de argumentos.</value>
  </data>
  <data name="UnsupportedEventHandlerTypeOnClientProxyInterface" xml:space="preserve">
    <value>Tipo de manipulador de eventos sem suporte no "{0}". Há suporte somente para EventHandler e EventHandler&lt;T&gt;.</value>
  </data>
  <data name="ParameterObjectsNotSupportedInJsonRpc10" xml:space="preserve">
    <value>O JSON-RPC 1.0 não é compatível com argumentos nomeados (parâmetros passados dentro de um objeto). Use argumentos posicionais (matrizes de parâmetros) ou defina a versão do protocolo para 2.0.</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>Um objeto de destino deve ser fornecido se e somente se o método não é estático.</value>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>A mensagem JSON-RPC de entrada não estava em conformidade com um padrão reconhecido.</value>
  </data>
  <data name="UnexpectedResponseWithNoMatchingRequest" xml:space="preserve">
    <value>Uma resposta foi recebida sem que uma solicitação tenha sido enviada.</value>
  </data>
  <data name="TextEncoderNotApplicable" xml:space="preserve">
    <value>Não há suporte para a codificação de texto, pois o formatador "{0}" não implementa "{1}".</value>
  </data>
  <data name="MarshalableInterfaceHasProperties" xml:space="preserve">
    <value>Interfaces com propriedades não podem ter marshaling.</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Todas as sobrecargas e substituições do método '{0}' devem compartilhar um valor comum para {1}.{2}.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>Ler JSON RPC do fluxo apresentou falha com {0}: {1}</value>
  </data>
  <data name="ConnectionDropped" xml:space="preserve">
    <value>A conexão JSON-RPC com a parte remota foi perdida antes que a solicitação pudesse ser concluída.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Recebeu uma solicitação para executar '{0}', mas não tem qualquer objeto de retorno de chamada. Cancelar a solicitação.</value>
  </data>
  <data name="FormatterConfigurationLockedAfterJsonRpcAssigned" xml:space="preserve">
    <value>A configuração está bloqueada porque este formatador já foi associado a uma instância de JsonRpc.</value>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Um inteiro positivo é necessário.</value>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>O fluxo deve ser gravável.</value>
  </data>
  <data name="ResponseUnexpectedFormat" xml:space="preserve">
    <value>A resposta está em um formato inesperado. Há suporte somente para erro e resultado: {0}</value>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>JSON RPC não pode ser nulo.</value>
  </data>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>Legível e gravável são nulos.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>O buffer está vazio. Chame o método de async para preenchê-lo primeiro.</value>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Final do fluxo atingido.</value>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>O tamanho do cabeçalho da mensagem excede o tamanho máximo com suporte.</value>
  </data>
  <data name="ResponseSerializationFailure" xml:space="preserve">
    <value>Falha ao serializar a resposta.</value>
  </data>
  <data name="MarshalableInterfaceNotDisposable" xml:space="preserve">
    <value>As interfaces com marshaling devem estender IDisposable.</value>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Falha ao desserializar JSON RPC de entrada '{0}':{1}</value>
  </data>
  <data name="JsonRpcMethodAndIgnoreAttributesFound" xml:space="preserve">
    <value>JsonRpcMethodAttribute conflitante e JsonRpcIgnoreAttribute encontrados no mesmo método: {0}.</value>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>Nenhum método com o nome '{0}' foi encontrado.</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>Os parâmetros {0} e {1} excedem o comprimento da matriz.</value>
  </data>
  <data name="UnsupportedPropertiesOnClientProxyInterface" xml:space="preserve">
    <value>Propriedades não são compatíveis com interfaces de serviço.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>Um inteiro não negativo é necessário.</value>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>Os parâmetros {0} não são compatíveis com os argumentos fornecidos na solicitação.</value>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>A escuta precisa ser iniciada primeiro.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>O parâmetro não está no formato de um objeto único</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>Isso não pode ser feito após o início da escuta.</value>
  </data>
  <data name="MarshalableInterfaceHasEvents" xml:space="preserve">
    <value>Interfaces com eventos não podem ter marshaling.</value>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Essa operação não é permitida após a escuta de mensagens começar.</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Falha ao analisar o cabeçalho de Content-Length em um inteiro positivo.</value>
  </data>
  <data name="RelayAlreadySet" xml:space="preserve">
    <value>A conexão de retransmissão já foi estabelecida.</value>
  </data>
  <data name="FailureDeserializingRpcResult" xml:space="preserve">
    <value>Falha na desserialização do resultado do JSON-RPC para o tipo {0} com {1}: {2}</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>A tarefa não foi concluída.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} tem parâmetros ref ou out, e não há suporte para isso</value>
  </data>
  <data name="FailureDeserializingRpcArgument" xml:space="preserve">
    <value>Falha na desserialização do argumento JSON-RPC com o nome "{0}" e a posição {1} para o tipo "{2}": {3}</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Essa operação não é permitida antes da escuta de mensagens começar.</value>
  </data>
  <data name="NotSupportedWithoutMultiplexingStream" xml:space="preserve">
    <value>Não há suporte para fluxos ou pipes fora de banda nesta configuração. Você definiu um MultiplexingStream no formatador?</value>
  </data>
  <data name="RequiredArgumentMissing" xml:space="preserve">
    <value>Um argumento não foi fornecido para um parâmetro necessário.</value>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Os métodos .NET '{0}' e '{1}' não podem ser mapeados para o mesmo nome do método de solicitação: '{2}'.</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>O fluxo deve ser legível.</value>
  </data>
  <data name="ErrorWritingJsonRpcMessage" xml:space="preserve">
    <value>Erro ao gravar a Mensagem da RPC do JSON: {0}: {1}</value>
  </data>
  <data name="EnumValueNotRecognized" xml:space="preserve">
    <value>O valor {0} não está entre os membros reconhecidos ou com suporte do tipo enumerado.</value>
  </data>
  <data name="MarshaledObjectInResponseOrNotificationError" xml:space="preserve">
    <value>Esse objeto rastreado não deve fazer parte de nenhuma resposta ou notificação.</value>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>{0} parâmetro(s) (excluindo qualquer CancellationToken): {1}, mas a solicitação fornece {2}</value>
  </data>
  <data name="CannotBeCalledAfterGetAsyncEnumerator" xml:space="preserve">
    <value>Isso não pode ser feito depois que GetAsyncEnumerator é chamado.</value>
  </data>
  <data name="UnsupportedJsonRpcProtocolVersion" xml:space="preserve">
    <value>Versão {0} do protocolo JSON-RPC sem suporte. As versões do protocolo com suporte são: {1}</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>Uma exceção fatal foi gerada pelo método do servidor {0}: {1}</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Token inesperado '{0}' durante a análise de cabeçalho.</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>Um método com o mesmo nome e parâmetros equivalentes já foi registrado.</value>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Erro ao gravar o Resultado JSON RPC: {0}: {1}</value>
  </data>
  <data name="ClientProxyTypeArgumentMustBeAnInterface" xml:space="preserve">
    <value>"{0}" não é uma interface.</value>
  </data>
  <data name="UnrecognizableMessage" xml:space="preserve">
    <value>Não é possível reconhecer a mensagem de entrada como um dos tipos de mensagem definidos do JSON-RPC 2.0.</value>
  </data>
  <data name="MarshaledObjectInNotificationError" xml:space="preserve">
    <value>Este objeto rastreado não pode ser incluído em uma notificação. Há suporte somente para mensagens que incluem uma propriedade "ID".</value>
  </data>
  <data name="UnsupportedGenericMethodsOnClientProxyInterface" xml:space="preserve">
    <value>Não há suporte para métodos genéricos.</value>
  </data>
  <data name="FindIProgressOfTError" xml:space="preserve">
    <value>Não é possível converter o Tipo fornecido em IProgress&lt;T&gt;</value>
  </data>
  <data name="UnknownTokenToMarshaledObject" xml:space="preserve">
    <value>Este objeto remoto não existe mais.</value>
  </data>
  <data name="UnsupportedMethodReturnTypeOnClientProxyInterface" xml:space="preserve">
    <value>O método "{0}" tem o tipo de retorno não compatível "{1}". Somente os métodos de retorno de tarefa são compatíveis.</value>
  </data>
</root>