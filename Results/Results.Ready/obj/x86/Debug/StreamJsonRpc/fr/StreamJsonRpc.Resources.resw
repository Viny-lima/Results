<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>La tâche a été annulée.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Le flux a été supprimé</value>
  </data>
  <data name="InboundMessageOnly" xml:space="preserve">
    <value>Cette opération est appropriée uniquement pour les messages entrants.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>La méthode '{0}/{1}' est introuvable sur {2} pour les raisons suivantes : {3}</value>
  </data>
  <data name="ReservedPropertyName" xml:space="preserve">
    <value>Ce nom de propriété est réservé par la spécification JSON-RPC ou cette bibliothèque.</value>
  </data>
  <data name="OutboundMessageOnly" xml:space="preserve">
    <value>Cette opération est appropriée uniquement pour les messages sortants.</value>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>La réponse n'est pas une erreur.</value>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Erreur inattendue durant le traitement du message JSON-RPC : {0}</value>
  </data>
  <data name="CancellationTokenMustBeLastParameter" xml:space="preserve">
    <value>Un jeton d'annulation (CancellationToken) est autorisé seulement comme dernier paramètre.</value>
  </data>
  <data name="ElementsAlreadyPrefetched" xml:space="preserve">
    <value>Cette énumération a déjà effectué une prérécupération (prefetch) des éléments.</value>
  </data>
  <data name="UsableOnceOnly" xml:space="preserve">
    <value>Cette opération ne peut être effectuée qu’une seule fois sur cet objet.</value>
  </data>
  <data name="TypedArgumentsLengthMismatch" xml:space="preserve">
    <value>La longueur de cette liste doit être égale à la longueur de la liste d'arguments.</value>
  </data>
  <data name="UnsupportedEventHandlerTypeOnClientProxyInterface" xml:space="preserve">
    <value>Type de gestionnaire d'événements non pris en charge sur "{0}". Seuls EventHandler et EventHandler&lt;T&gt; sont pris en charge.</value>
  </data>
  <data name="ParameterObjectsNotSupportedInJsonRpc10" xml:space="preserve">
    <value>JSON-RPC 1.0 ne prend pas en charge les arguments nommés (paramètres passés dans un objet). Utilisez des arguments positionnels (tableaux de paramètres) ou définissez la version de protocole sur 2.0.</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>Un objet cible doit être fourni si et seulement si la méthode n'est pas statique.</value>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>Le message JSON-RPC entrant n’est pas conforme à un modèle reconnu.</value>
  </data>
  <data name="UnexpectedResponseWithNoMatchingRequest" xml:space="preserve">
    <value>Une réponse a été reçue sans envoi d'une requête.</value>
  </data>
  <data name="TextEncoderNotApplicable" xml:space="preserve">
    <value>L'encodage de texte n’est pas pris en charge car le formateur « {0} » n'implémente pas « {1} ».</value>
  </data>
  <data name="MarshalableInterfaceHasProperties" xml:space="preserve">
    <value>Impossible de marshaler les interfaces avec des propriétés</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Toutes les surcharges et les substitutions de la méthode '{0}' doivent partager une valeur commune pour {1}.{2}.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>Échec de la lecture du protocole JSON RPC à partir du flux. {0} : {1}</value>
  </data>
  <data name="ConnectionDropped" xml:space="preserve">
    <value>La connexion JSON-RPC avec le site distant a été interrompue avant la fin de la requête.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>Requête à exécuter '{0}' sans objet de rappel. Annulation de la requête.</value>
  </data>
  <data name="FormatterConfigurationLockedAfterJsonRpcAssigned" xml:space="preserve">
    <value>La configuration est verrouillée, car ce formateur a déjà été associé à une instance JsonRpc.</value>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Un nombre entier positif est obligatoire.</value>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>Le flux doit être accessible en écriture.</value>
  </data>
  <data name="ResponseUnexpectedFormat" xml:space="preserve">
    <value>Le format de la réponse est inattendu. Seuls l'erreur et le résultat sont pris en charge : {0}</value>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>Le protocole JSON RPC ne doit pas avoir la valeur Null.</value>
  </data>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>readable et writable ont la valeur Null.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>Le tampon est vide. Appelez la méthode async pour commencer par le remplir.</value>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>Fin de flux atteinte.</value>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>La taille de l’en-tête du message dépasse la taille maximale prise en charge.</value>
  </data>
  <data name="ResponseSerializationFailure" xml:space="preserve">
    <value>Échec de la sérialisation de la réponse.</value>
  </data>
  <data name="MarshalableInterfaceNotDisposable" xml:space="preserve">
    <value>Les interfaces marshalées doivent étendre IDisposable.</value>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Échec de la désérialisation du protocole JSON RPC entrant '{0}' : {1}</value>
  </data>
  <data name="JsonRpcMethodAndIgnoreAttributesFound" xml:space="preserve">
    <value>JsonRpcMethodAttribute et JsonRpcIgnoreAttribute en conflit trouvés sur la même méthode : {0}.</value>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>La méthode nommée '{0}' est introuvable.</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>Les paramètres {0} et {1} dépassent la longueur du tableau.</value>
  </data>
  <data name="UnsupportedPropertiesOnClientProxyInterface" xml:space="preserve">
    <value>Les propriétés ne sont pas prises en charge pour les interfaces de service.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>Un entier non négatif est obligatoire.</value>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>Les paramètres de {0} ne sont pas compatibles avec les arguments fournis dans la requête.</value>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>L'écoute doit d'abord démarrer.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>Le paramètre n'est pas sous la forme d'un seul objet</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>Cette opération ne peut pas être effectuée après le démarrage de l'écoute.</value>
  </data>
  <data name="MarshalableInterfaceHasEvents" xml:space="preserve">
    <value>Impossible de marshaler les interfaces avec des événements</value>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Cette opération n’est pas autorisée une fois que l’écoute des messages a commencé.</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Échec de l’analyse de l’en-tête Content-Length dans un entier positif.</value>
  </data>
  <data name="RelayAlreadySet" xml:space="preserve">
    <value>La connexion au relais a déjà été établie.</value>
  </data>
  <data name="FailureDeserializingRpcResult" xml:space="preserve">
    <value>Échec de la désérialisation du résultat JSON-RPC en type {0} avec {1} : {2}</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>La tâche est inachevée.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} a un ou plusieurs paramètres ref ou out, ce qui n'est pas pris en charge</value>
  </data>
  <data name="FailureDeserializingRpcArgument" xml:space="preserve">
    <value>La désérialisation de l'argument JSON-RPC avec le nom "{0}" et la position {1} en type "{2}" a échoué : {3}</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Cette opération n’est pas autorisée avant que l’écoute des messages ait commencé.</value>
  </data>
  <data name="NotSupportedWithoutMultiplexingStream" xml:space="preserve">
    <value>Les flux/canaux hors bande ne sont pas pris en charge dans cette configuration. Avez-vous défini un MultiplexingStream sur le formateur ?</value>
  </data>
  <data name="RequiredArgumentMissing" xml:space="preserve">
    <value>Un argument n'a pas été fourni pour un paramètre obligatoire.</value>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Les méthodes .NET '{0}' et '{1}' ne peuvent pas mapper au même nom de méthode de demande : '{2}'.</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>Le flux doit être lisible.</value>
  </data>
  <data name="ErrorWritingJsonRpcMessage" xml:space="preserve">
    <value>Erreur lors de l'écriture du message RPC JSON : {0} : {1}</value>
  </data>
  <data name="EnumValueNotRecognized" xml:space="preserve">
    <value>La valeur {0} ne se trouve pas parmi les membres reconnus ou pris en charge du type enum.</value>
  </data>
  <data name="MarshaledObjectInResponseOrNotificationError" xml:space="preserve">
    <value>Cet objet suivi ne doit pas faire partie d'une réponse ou d'une notification.</value>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>{0} paramètre(s) (CancellationToken exclu) : {1}, mais la demande fournit {2}</value>
  </data>
  <data name="CannotBeCalledAfterGetAsyncEnumerator" xml:space="preserve">
    <value>Ceci ne peut pas être effectué après l'appel de GetAsyncEnumerator.</value>
  </data>
  <data name="UnsupportedJsonRpcProtocolVersion" xml:space="preserve">
    <value>Version de protocole JSON-RPC {0} non prise en charge. Les versions de protocole prises en charge sont : {1}</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>Une exception irrécupérable a été levée depuis la méthode de serveur {0} : {1}</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Jeton inattendu '{0}' lors de l’analyse d’en-tête.</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>Une méthode ayant le même nom et des paramètres équivalents a déjà été inscrite.</value>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Erreur durant l'écriture du résultat du protocole JSON RPC : {0} : {1}</value>
  </data>
  <data name="ClientProxyTypeArgumentMustBeAnInterface" xml:space="preserve">
    <value>"{0}" n'est pas une interface.</value>
  </data>
  <data name="UnrecognizableMessage" xml:space="preserve">
    <value>Impossible de reconnaître le message entrant comme l'un des types de message JSON-RPC 2.0 définis.</value>
  </data>
  <data name="MarshaledObjectInNotificationError" xml:space="preserve">
    <value>Cet objet suivi ne peut pas être inclus dans une notification. Seuls les messages comportant une propriété "id" sont pris en charge.</value>
  </data>
  <data name="UnsupportedGenericMethodsOnClientProxyInterface" xml:space="preserve">
    <value>Les méthodes génériques ne sont pas prises en charge.</value>
  </data>
  <data name="FindIProgressOfTError" xml:space="preserve">
    <value>Impossible de caster le type donné en IProgress&lt;T&gt;</value>
  </data>
  <data name="UnknownTokenToMarshaledObject" xml:space="preserve">
    <value>Cet objet distant n'existe plus.</value>
  </data>
  <data name="UnsupportedMethodReturnTypeOnClientProxyInterface" xml:space="preserve">
    <value>La méthode "{0}" a un type de retour non pris en charge "{1}". Seules les méthodes qui retournent des tâches sont prises en charge.</value>
  </data>
</root>