<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>L'attività è stata annullata.</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>Il flusso è stato eliminato</value>
  </data>
  <data name="InboundMessageOnly" xml:space="preserve">
    <value>Questa operazione è appropriata solo per i messaggi in ingresso.</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>Il metodo '{0}/{1}' non è stato trovato in {2} per i motivi seguenti: {3}</value>
  </data>
  <data name="ReservedPropertyName" xml:space="preserve">
    <value>Questo nome di proprietà è riservato dalla specifica JSON-RPC o da questa libreria.</value>
  </data>
  <data name="OutboundMessageOnly" xml:space="preserve">
    <value>Questa operazione è appropriata solo per i messaggi in uscita.</value>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>La risposta non è un errore.</value>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>Errore imprevisto durante l'elaborazione del messaggio JSON-RPC: {0}</value>
  </data>
  <data name="CancellationTokenMustBeLastParameter" xml:space="preserve">
    <value>Un oggetto CancellationToken è consentito solo come ultimo parametro.</value>
  </data>
  <data name="ElementsAlreadyPrefetched" xml:space="preserve">
    <value>Questa enumerazione ha già eseguito la prelettura degli elementi in passato.</value>
  </data>
  <data name="UsableOnceOnly" xml:space="preserve">
    <value>Questa operazione può essere eseguita una sola volta su questo oggetto.</value>
  </data>
  <data name="TypedArgumentsLengthMismatch" xml:space="preserve">
    <value>La lunghezza di questo elenco deve essere uguale alla lunghezza dell'elenco di argomenti.</value>
  </data>
  <data name="UnsupportedEventHandlerTypeOnClientProxyInterface" xml:space="preserve">
    <value>Tipo di gestore dell'evento non supportato in "{0}". Sono supportati solo EventHandler e EventHandler&lt;T&gt;.</value>
  </data>
  <data name="ParameterObjectsNotSupportedInJsonRpc10" xml:space="preserve">
    <value>JSON-RPC 1.0 non supporta gli argomenti denominati (parametri passati in un oggetto). Usare argomenti posizionali (matrici di parametri) o impostare la versione del protocollo su 2.0.</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>È necessario specificare un oggetto di destinazione solo se il metodo non è static.</value>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>Il messaggio JSON-RPC in arrivo non è conforme a un modello riconosciuto.</value>
  </data>
  <data name="UnexpectedResponseWithNoMatchingRequest" xml:space="preserve">
    <value>È stata ricevuta una risposta ma non è stata inviata alcuna richiesta.</value>
  </data>
  <data name="TextEncoderNotApplicable" xml:space="preserve">
    <value>La codifica del testo non è supportata perché il formattatore "{0}" non implementa "{1}".</value>
  </data>
  <data name="MarshalableInterfaceHasProperties" xml:space="preserve">
    <value>Impossibile effettuare il marshalling delle interfacce con proprietà.</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>Tutti gli overload e gli override del metodo '{0}' devono condividere un valore comune per {1}.{2}.</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>La lettura della RPC JSON dal flusso non è riuscita. {0}: {1}</value>
  </data>
  <data name="ConnectionDropped" xml:space="preserve">
    <value>La connessione JSON-RPC con la parte remota è andata persa prima del completamento della richiesta.</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>È stata ricevuta una richiesta per l'esecuzione di '{0}' ma non sono presenti oggetti di callback. La richiesta verrà eliminata.</value>
  </data>
  <data name="FormatterConfigurationLockedAfterJsonRpcAssigned" xml:space="preserve">
    <value>La configurazione è bloccata perché questo formattatore è già stato associato a un'istanza di JsonRpc.</value>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>È richiesto un numero intero positivo.</value>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>Il flusso deve essere scrivibile.</value>
  </data>
  <data name="ResponseUnexpectedFormat" xml:space="preserve">
    <value>Il formato della risposta è imprevisto. Sono supportati solo l'errore e il risultato: {0}</value>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>La RPC JSON non deve essere Null.</value>
  </data>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>I parametri readable e writable sono entrambi Null.</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>Il buffer è vuoto. Chiamare il metodo asincrono per compilarlo prima.</value>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>È stata raggiunta la fine del flusso.</value>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>Le dimensioni dell'intestazione del messaggio superano quelle massime supportate.</value>
  </data>
  <data name="ResponseSerializationFailure" xml:space="preserve">
    <value>Non è stato possibile serializzare la risposta.</value>
  </data>
  <data name="MarshalableInterfaceNotDisposable" xml:space="preserve">
    <value>Le interfacce di cui è stato eseguito il marshalling devono estendere IDisposable.</value>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>Si è verificato un errore durante la deserializzazione della RPC JSON in arrivo '{0}': {1}</value>
  </data>
  <data name="JsonRpcMethodAndIgnoreAttributesFound" xml:space="preserve">
    <value>Trovati JsonRpcMethodAttribute e JsonRpcIgnoreAttribute in conflitto nello stesso metodo: {0}.</value>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>Non è stato trovato alcun metodo denominato '{0}'.</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>I parametri {0} e {1} superano la lunghezza della matrice.</value>
  </data>
  <data name="UnsupportedPropertiesOnClientProxyInterface" xml:space="preserve">
    <value>Le proprietà non sono supportate per le interfacce di servizio.</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>È richiesto un numero intero non negativo.</value>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>I parametri di {0} non sono compatibili con gli argomenti specificati nella richiesta.</value>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>È necessario avviare prima l'ascolto.</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>Il parametro non è disponibile sotto forma di singolo oggetto</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>Non è possibile eseguire questa operazione dopo l'avvio dell'ascolto.</value>
  </data>
  <data name="MarshalableInterfaceHasEvents" xml:space="preserve">
    <value>Impossibile effettuare il marshalling delle interfacce con eventi.</value>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>Questa operazione non è consentita dopo l'avvio dell'ascolto dei messaggi.</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Non è stato possibile analizzare l'intestazione di Content-Length in un numero intero positivo.</value>
  </data>
  <data name="RelayAlreadySet" xml:space="preserve">
    <value>La connessione di inoltro è già stata stabilita.</value>
  </data>
  <data name="FailureDeserializingRpcResult" xml:space="preserve">
    <value>La deserializzazione del risultato JSON-RPC nel tipo {0} non è riuscita. Tipo dell'eccezione {1}: {2}</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>L'attività non è stata completata.</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} contiene parametri ref o out e questo comportamento non è supportato</value>
  </data>
  <data name="FailureDeserializingRpcArgument" xml:space="preserve">
    <value>La deserializzazione dell'argomento di JSON-RPC con nome "{0}" e posizione {1} nel tipo "{2}" non è riuscita: {3}</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>Questa operazione non è consentita prima dell'avvio dell'ascolto dei messaggi.</value>
  </data>
  <data name="NotSupportedWithoutMultiplexingStream" xml:space="preserve">
    <value>I flussi e/o le pipe fuori banda non sono supportati in questa configurazione. È stato impostato un elemento MultiplexingStream sul formattatore?</value>
  </data>
  <data name="RequiredArgumentMissing" xml:space="preserve">
    <value>Non è stato specificato alcun argomento per un parametro obbligatorio.</value>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>Non è possibile eseguire il mapping dei metodi .NET '{0}' e '{1}' allo stesso nome di metodo di richiesta: '{2}'.</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>Il flusso deve essere leggibile.</value>
  </data>
  <data name="ErrorWritingJsonRpcMessage" xml:space="preserve">
    <value>Si è verificato un errore durante la scrittura del messaggio della RPC JSON. {0}: {1}</value>
  </data>
  <data name="EnumValueNotRecognized" xml:space="preserve">
    <value>Il valore {0} non è compreso tra i membri riconosciuti o supportati del tipo enumerazione.</value>
  </data>
  <data name="MarshaledObjectInResponseOrNotificationError" xml:space="preserve">
    <value>Questo oggetto rilevato non deve far parte di alcuna risposta o notifica.</value>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>I parametri di {0} (escluso eventuali elementi CancellationToken) sono {1}, ma la richiesta ne fornisce {2}</value>
  </data>
  <data name="CannotBeCalledAfterGetAsyncEnumerator" xml:space="preserve">
    <value>Non è possibile eseguire questa operazione dopo che è già stato chiamato GetAsyncEnumerator.</value>
  </data>
  <data name="UnsupportedJsonRpcProtocolVersion" xml:space="preserve">
    <value>La versione del protocollo JSON-RPC {0} non è supportata. Le versioni del protocollo supportate sono: {1}</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>Il metodo del server {0} ha generato un'eccezione irreversibile: {1}</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>Token '{0}' imprevisto durante l'analisi dell'intestazione.</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>È già stato registrato un metodo con lo stesso nome e parametri equivalenti.</value>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>Si è verificato un errore durante la scrittura del risultato della RPC JSON. {0}: {1}</value>
  </data>
  <data name="ClientProxyTypeArgumentMustBeAnInterface" xml:space="preserve">
    <value>"{0}" non è un'interfaccia.</value>
  </data>
  <data name="UnrecognizableMessage" xml:space="preserve">
    <value>Non è possibile riconoscere il messaggio in arrivo come uno dei tipi di messaggio definiti nella specifica JSON-RPC 2.0.</value>
  </data>
  <data name="MarshaledObjectInNotificationError" xml:space="preserve">
    <value>Questo oggetto tracciato non può essere incluso in una notifica. Sono supportati solo i messaggi che includono una proprietà "id".</value>
  </data>
  <data name="UnsupportedGenericMethodsOnClientProxyInterface" xml:space="preserve">
    <value>Metodi generici non supportati.</value>
  </data>
  <data name="FindIProgressOfTError" xml:space="preserve">
    <value>Non è possibile eseguire il cast del tipo specificato in IProgress&lt;T&gt;</value>
  </data>
  <data name="UnknownTokenToMarshaledObject" xml:space="preserve">
    <value>Questo oggetto remoto non esiste più.</value>
  </data>
  <data name="UnsupportedMethodReturnTypeOnClientProxyInterface" xml:space="preserve">
    <value>Il metodo "{0}" contiene il tipo restituito "{1}" che non è supportato. Sono supportati solo i metodi che restituiscono Task.</value>
  </data>
</root>