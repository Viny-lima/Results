<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TaskWasCancelled" xml:space="preserve">
    <value>タスクはキャンセルされました。</value>
  </data>
  <data name="StreamDisposed" xml:space="preserve">
    <value>ストリームが破棄されました</value>
  </data>
  <data name="InboundMessageOnly" xml:space="preserve">
    <value>この操作は、受信メッセージにのみ該当します。</value>
  </data>
  <data name="UnableToFindMethod" xml:space="preserve">
    <value>以下の理由で、{2} でメソッド '{0}/{1}' が見つかりません: {3}</value>
  </data>
  <data name="ReservedPropertyName" xml:space="preserve">
    <value>このプロパティ名は、JSON-RPC 仕様またはこのライブラリで予約されています。</value>
  </data>
  <data name="OutboundMessageOnly" xml:space="preserve">
    <value>この操作は、送信メッセージにのみ該当します。</value>
  </data>
  <data name="ResponseIsNotError" xml:space="preserve">
    <value>応答はエラーではありません。</value>
  </data>
  <data name="UnexpectedErrorProcessingJsonRpc" xml:space="preserve">
    <value>JSON-RPC メッセージの処理で予期しないエラーが発生しました: {0}</value>
  </data>
  <data name="CancellationTokenMustBeLastParameter" xml:space="preserve">
    <value>CancellationToken は、最後のパラメーターとしてのみ許可されます。</value>
  </data>
  <data name="ElementsAlreadyPrefetched" xml:space="preserve">
    <value>この列挙では既に要素が以前にプリフェッチされています。</value>
  </data>
  <data name="UsableOnceOnly" xml:space="preserve">
    <value>この操作は、このオブジェクトで 1 回のみ実行できます。</value>
  </data>
  <data name="TypedArgumentsLengthMismatch" xml:space="preserve">
    <value>このリストの長さは、引数リストの長さと同じである必要があります。</value>
  </data>
  <data name="UnsupportedEventHandlerTypeOnClientProxyInterface" xml:space="preserve">
    <value>"{0}" にサポートされていないイベント ハンドラーの型があります。サポートされているのは、EventHandler と EventHandler&lt;T&gt; のみです。</value>
  </data>
  <data name="ParameterObjectsNotSupportedInJsonRpc10" xml:space="preserve">
    <value>JSON-RPC 1.0 は名前付き引数 (オブジェクト内で渡されるパラメーター) をサポートしていません。位置引数 (パラメーター配列) を使用するか、プロトコル バージョンを 2.0 に設定してください。</value>
  </data>
  <data name="TargetObjectAndMethodStaticFlagMismatch" xml:space="preserve">
    <value>メソッドが静的でない場合のみ、ターゲット オブジェクトを指定する必要があります。</value>
  </data>
  <data name="UnrecognizedIncomingJsonRpc" xml:space="preserve">
    <value>JSON-RPC 受信メッセージは、認識されるパターンに準拠していません。</value>
  </data>
  <data name="UnexpectedResponseWithNoMatchingRequest" xml:space="preserve">
    <value>応答を受信しましたが、要求は送信されていません。</value>
  </data>
  <data name="TextEncoderNotApplicable" xml:space="preserve">
    <value>フォーマッタ "{0}" で "{1}" が実装されていないため、テキストのエンコーディングはサポートされていません。</value>
  </data>
  <data name="MarshalableInterfaceHasProperties" xml:space="preserve">
    <value>プロパティを持つインターフェイスはマーシャリングできません。</value>
  </data>
  <data name="ConflictingMethodNameAttribute" xml:space="preserve">
    <value>'{0}' メソッドのすべてのオーバーロードと上書きは、{1}.{2} の共通の値を共有する必要があります。</value>
  </data>
  <data name="ReadingJsonRpcStreamFailed" xml:space="preserve">
    <value>ストリームからの JSON RPC の読み取りが {0} で失敗しました: {1}</value>
  </data>
  <data name="ConnectionDropped" xml:space="preserve">
    <value>リモート パーティとの JSON-RPC 接続は、要求が完了する前に失われました。</value>
  </data>
  <data name="DroppingRequestDueToNoTargetObject" xml:space="preserve">
    <value>'{0}' を実行する要求を取得しましたが、コールバック オブジェクトがありません。要求を削除しています。</value>
  </data>
  <data name="FormatterConfigurationLockedAfterJsonRpcAssigned" xml:space="preserve">
    <value>このフォーマッタは既に JsonRpc インスタンスに関連付けられているため、構成はロックされています。</value>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>正の整数が必要です。</value>
  </data>
  <data name="StreamMustBeWriteable" xml:space="preserve">
    <value>ストリームは書き込み可能である必要があります。</value>
  </data>
  <data name="ResponseUnexpectedFormat" xml:space="preserve">
    <value>応答が予期しない形式です。エラーと結果のみがサポートされています: {0}</value>
  </data>
  <data name="JsonRpcCannotBeNull" xml:space="preserve">
    <value>JSON RPC を null にすることはできません。</value>
  </data>
  <data name="BothReadableWritableAreNull" xml:space="preserve">
    <value>Readable と Writable の両方が null です。</value>
  </data>
  <data name="FillBufferFirst" xml:space="preserve">
    <value>バッファーが空です。まずそれを埋めるための非同期メソッドを呼び出します。</value>
  </data>
  <data name="ReachedEndOfStream" xml:space="preserve">
    <value>ストリームの終わりに達しました。</value>
  </data>
  <data name="HeaderValueTooLarge" xml:space="preserve">
    <value>メッセージ ヘッダーのサイズは、サポートされる最大サイズを超えています。</value>
  </data>
  <data name="ResponseSerializationFailure" xml:space="preserve">
    <value>応答をシリアル化できませんでした。</value>
  </data>
  <data name="MarshalableInterfaceNotDisposable" xml:space="preserve">
    <value>マーシャリングされたインターフェイスでは、 IDisposable が拡張される必要があります。</value>
  </data>
  <data name="FailureDeserializingJsonRpc" xml:space="preserve">
    <value>受信 JSON RPC '{0}' の逆シリアル化中にエラーが発生しました: {1}</value>
  </data>
  <data name="JsonRpcMethodAndIgnoreAttributesFound" xml:space="preserve">
    <value>競合する JsonRpcMethodAttribute と JsonRpcIgnoreAttribute が同じメソッドで見つかりました: {0}。</value>
  </data>
  <data name="RpcMethodNameNotFound" xml:space="preserve">
    <value>名前 '{0}' によるメソッドは見つかりませんでした。</value>
  </data>
  <data name="SumOfTwoParametersExceedsArrayLength" xml:space="preserve">
    <value>{0} と {1} パラメーターが配列の長さを超えました。</value>
  </data>
  <data name="UnsupportedPropertiesOnClientProxyInterface" xml:space="preserve">
    <value>プロパティは、サービス インターフェイスではサポートされていません。</value>
  </data>
  <data name="NonNegativeIntegerRequired" xml:space="preserve">
    <value>負でない整数が必要です。</value>
  </data>
  <data name="MethodParametersNotCompatible" xml:space="preserve">
    <value>{0} パラメーターは、要求で指定された引数と互換性がありません。</value>
  </data>
  <data name="MustBeListening" xml:space="preserve">
    <value>最初にリッスンを開始する必要があります。</value>
  </data>
  <data name="ParameterNotObject" xml:space="preserve">
    <value>パラメーターが単一のオブジェクトの形式ではありません</value>
  </data>
  <data name="MustNotBeListening" xml:space="preserve">
    <value>リッスンを開始した後でこれを行うことはできません。</value>
  </data>
  <data name="MarshalableInterfaceHasEvents" xml:space="preserve">
    <value>イベントを含むインターフェイスはマーシャリングできません。</value>
  </data>
  <data name="InvalidAfterListenHasStarted" xml:space="preserve">
    <value>メッセージの聞き取りの開始後に、この操作は許可されていません。</value>
  </data>
  <data name="HeaderContentLengthNotParseable" xml:space="preserve">
    <value>Content-Length ヘッダーを正の整数に解析できませんでした。</value>
  </data>
  <data name="RelayAlreadySet" xml:space="preserve">
    <value>リレー接続は既に確立されています。</value>
  </data>
  <data name="FailureDeserializingRpcResult" xml:space="preserve">
    <value>{1} により、JSON-RPC の結果を型 {0} に逆シリアル化できませんでした: {2}</value>
  </data>
  <data name="TaskNotCompleted" xml:space="preserve">
    <value>タスクが完了していません。</value>
  </data>
  <data name="MethodHasRefOrOutParameters" xml:space="preserve">
    <value>{0} に ref または out パラメーターが指定されていますが、このパラメーターはサポートされていません</value>
  </data>
  <data name="FailureDeserializingRpcArgument" xml:space="preserve">
    <value>名前が "{0}"、位置が {1} の JSON-RPC 引数を型 "{2}" に逆シリアル化できませんでした: {3}</value>
  </data>
  <data name="InvalidBeforeListenHasStarted" xml:space="preserve">
    <value>メッセージの聞き取りの開始前に、この操作は許可されていません。</value>
  </data>
  <data name="NotSupportedWithoutMultiplexingStream" xml:space="preserve">
    <value>帯域外のストリームやパイプはこの構成ではサポートされていません。フォーマッタに MultiplexingStream を設定しましたか?</value>
  </data>
  <data name="RequiredArgumentMissing" xml:space="preserve">
    <value>必須のパラメーターに対して引数が指定されませんでした。</value>
  </data>
  <data name="ConflictingMethodAttributeValue" xml:space="preserve">
    <value>.NET メソッド '{0}' と '{1}' を両方とも同じ要求メソッド名 '{2}' にマッピングすることはできません。</value>
  </data>
  <data name="StreamMustBeReadable" xml:space="preserve">
    <value>ストリームは読み取り可能である必要があります。</value>
  </data>
  <data name="ErrorWritingJsonRpcMessage" xml:space="preserve">
    <value>JSON RPC メッセージの書き込み時のエラー: {0}: {1}</value>
  </data>
  <data name="EnumValueNotRecognized" xml:space="preserve">
    <value>{0} 値は、列挙型の認識されたメンバーまたはサポートされたメンバーに含まれていません。</value>
  </data>
  <data name="MarshaledObjectInResponseOrNotificationError" xml:space="preserve">
    <value>追跡されたこのオブジェクトを応答や通知の一部にすることはできません。</value>
  </data>
  <data name="MethodParameterCountDoesNotMatch" xml:space="preserve">
    <value>{0} パラメーター (CancellationToken は除外します): {1}、しかし要求は {2} を提供します</value>
  </data>
  <data name="CannotBeCalledAfterGetAsyncEnumerator" xml:space="preserve">
    <value>GetAsyncEnumerator が既に呼び出されている場合は、これを行うことはできません。</value>
  </data>
  <data name="UnsupportedJsonRpcProtocolVersion" xml:space="preserve">
    <value>JSON-RPC プロトコル バージョン {0} はサポートされていません。サポート対象バージョン: {1}</value>
  </data>
  <data name="FatalExceptionWasThrown" xml:space="preserve">
    <value>致命的な例外がサーバー メソッド {0} からスローされました: {1}</value>
  </data>
  <data name="UnexpectedTokenReadingHeader" xml:space="preserve">
    <value>ヘッダーを解析中の予期しないトークン '{0}'。</value>
  </data>
  <data name="ConflictMethodSignatureAlreadyRegistered" xml:space="preserve">
    <value>同じ名前を持つメソッドと同等のパラメーターは既に登録されています。</value>
  </data>
  <data name="ErrorWritingJsonRpcResult" xml:space="preserve">
    <value>JSON RPC 結果の書き込み中にエラーが発生しました: {0}: {1}</value>
  </data>
  <data name="ClientProxyTypeArgumentMustBeAnInterface" xml:space="preserve">
    <value>"{0}" はインターフェイスではありません。</value>
  </data>
  <data name="UnrecognizableMessage" xml:space="preserve">
    <value>受信メッセージを JSON-RPC 2.0 定義メッセージの種類として認識できません。</value>
  </data>
  <data name="MarshaledObjectInNotificationError" xml:space="preserve">
    <value>この追跡されたオブジェクトを通知に含めることはできません。"id" プロパティを含むメッセージのみがサポートされています。</value>
  </data>
  <data name="UnsupportedGenericMethodsOnClientProxyInterface" xml:space="preserve">
    <value>ジェネリック メソッドがサポートされていません。</value>
  </data>
  <data name="FindIProgressOfTError" xml:space="preserve">
    <value>指定された型は IProgress&lt;T&gt; にキャストできません</value>
  </data>
  <data name="UnknownTokenToMarshaledObject" xml:space="preserve">
    <value>このリモート オブジェクトは存在しません。</value>
  </data>
  <data name="UnsupportedMethodReturnTypeOnClientProxyInterface" xml:space="preserve">
    <value>メソッド "{0}" にはサポートされていない戻り値の型 "{1}" が含まれています。タスクを返すメソッドのみがサポートされています。</value>
  </data>
</root>