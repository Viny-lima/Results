<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SyncContextFrameMismatchedAffinity" xml:space="preserve">
    <value>このフレームは、別のインスタンスで既に使用されています。</value>
  </data>
  <data name="JoinableTaskContextAndCollectionMismatch" xml:space="preserve">
    <value>JoinableTask はこのコレクションがインスタンス化されたコンテキストに属していません。</value>
  </data>
  <data name="LazyValueFaulted" xml:space="preserve">
    <value>遅延作成値の作成中にエラーが発生しました。</value>
  </data>
  <data name="SwitchToMainThreadFailedToReachExpectedThread" xml:space="preserve">
    <value>メイン スレッドへ切り替えを試みましたが、必要なスレッドに到達できませんでした。JoinableTaskContext が正しくないスレッドで初期化されましたか? あるいは、メイン スレッドでデリゲートを実行しない POST メソッドを持つ SynchronizationContext が関連付けられていますか?</value>
  </data>
  <data name="PushFromWrongThread" xml:space="preserve">
    <value>メッセージ ポンプは、元のスレッドからのみ実行できます。</value>
  </data>
  <data name="CannotUpgradeNonUpgradeableLock" xml:space="preserve">
    <value>アップグレードできない読み取りロックが呼び出し元によって設定されているため、アップグレードできません。</value>
  </data>
  <data name="MultipleContinuationsNotSupported" xml:space="preserve">
    <value>複数の継続はサポートされていません。</value>
  </data>
  <data name="WriteLockOutlived" xml:space="preserve">
    <value>書き込みロックよりも入れ子になった読み取りロックの方が長く存続しましたが、これは許可されていません。</value>
  </data>
  <data name="JoinableTaskContextNodeAlreadyRegistered" xml:space="preserve">
    <value>このノードは登録済みです。</value>
  </data>
  <data name="InvalidLock" xml:space="preserve">
    <value>この操作は有効なロックに対してのみ実行できます。</value>
  </data>
  <data name="SemaphoreAlreadyHeld" xml:space="preserve">
    <value>セマフォは既に保持されており、再入設定は '{0}' です。</value>
  </data>
  <data name="NotAllowedUnderURorWLock" xml:space="preserve">
    <value>AsyncReaderWriterLock から、アクティブでアップグレード可能な読み取りロックまたは書き込みロックを保持している間は、この操作を行うことができません。</value>
  </data>
  <data name="SemaphoreMisused" xml:space="preserve">
    <value>このセマフォは誤用されたため、使用できなくなりました。</value>
  </data>
  <data name="LockCompletionAlreadyRequested" xml:space="preserve">
    <value>このロックは既に完了対象に設定されています。新しいトップレベルのロックは提供できません。</value>
  </data>
  <data name="InvalidAfterCompleted" xml:space="preserve">
    <value>完了済みの状態へ既に移行されています。</value>
  </data>
  <data name="FrameMustBePushedFirst" xml:space="preserve">
    <value>このインスタンスを最初にプッシュする必要があります。</value>
  </data>
  <data name="STAThreadCallerNotAllowed" xml:space="preserve">
    <value>この操作は STA スレッドでは完了できません。</value>
  </data>
  <data name="ValueFactoryReentrancy" xml:space="preserve">
    <value>値ファクトリが同じインスタンスの値を呼び出しました。</value>
  </data>
  <data name="LazyValueNotCreated" xml:space="preserve">
    <value>遅延作成値はまだ作成されていません。</value>
  </data>
  <data name="AppliedSynchronizationContextNotAllowed" xml:space="preserve">
    <value>SynchronizationContext を適用したスレッド上でのロックの取得は許可されていません。</value>
  </data>
  <data name="InvalidWithoutLock" xml:space="preserve">
    <value>ロックが必要です。</value>
  </data>
  <data name="SemaphoreStackNestingViolated" xml:space="preserve">
    <value>入れ子になったセマフォの要求は、再入の設定が '{0}' である場合、LIFO の順序でリリースする必要があります。</value>
  </data>
  <data name="DangerousReadLockRequestFromWriteLockFork" xml:space="preserve">
    <value>書き込みロックのフォークからの、危険性のある読み取りロック要求です。</value>
  </data>
  <data name="QueueEmpty" xml:space="preserve">
    <value>キューが空です。</value>
  </data>
  <data name="SyncContextNotSet" xml:space="preserve">
    <value>メイン スレッドに到達するための SynchronizationContext が設定されていません。</value>
  </data>
</root>