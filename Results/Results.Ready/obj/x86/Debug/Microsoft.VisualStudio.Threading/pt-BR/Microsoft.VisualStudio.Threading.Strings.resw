<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SyncContextFrameMismatchedAffinity" xml:space="preserve">
    <value>Este quadro já foi usado com uma instância diferente.</value>
  </data>
  <data name="JoinableTaskContextAndCollectionMismatch" xml:space="preserve">
    <value>JoinableTask não pertence ao contexto com o qual esta coleção foi instanciada.</value>
  </data>
  <data name="LazyValueFaulted" xml:space="preserve">
    <value>O valor criado de forma lenta apresentou falha durante a construção.</value>
  </data>
  <data name="SwitchToMainThreadFailedToReachExpectedThread" xml:space="preserve">
    <value>Uma tentativa de mudar para o thread principal falhou ao alcançar o thread esperado. O JoinableTaskContext foi inicializado no thread incorreto ou com um SynchronizationContext cujo método Post não executa seu delegado no thread principal?</value>
  </data>
  <data name="PushFromWrongThread" xml:space="preserve">
    <value>O aumento de mensagens só pode ser executado do thread original.</value>
  </data>
  <data name="CannotUpgradeNonUpgradeableLock" xml:space="preserve">
    <value>Um bloqueio de leitura não atualizável é mantido pelo chamador e não pode ser atualizado.</value>
  </data>
  <data name="MultipleContinuationsNotSupported" xml:space="preserve">
    <value>Não há suporte para várias continuações.</value>
  </data>
  <data name="WriteLockOutlived" xml:space="preserve">
    <value>Bloqueio de gravação ativo em um bloqueio de leitura aninhado, o que não é permitido.</value>
  </data>
  <data name="JoinableTaskContextNodeAlreadyRegistered" xml:space="preserve">
    <value>Este nó já está registrado.</value>
  </data>
  <data name="InvalidLock" xml:space="preserve">
    <value>Esta operação só pode ser executada em um bloqueio válido.</value>
  </data>
  <data name="SemaphoreAlreadyHeld" xml:space="preserve">
    <value>O semáforo já foi retido e a configuração de reentrância é '{0}'.</value>
  </data>
  <data name="NotAllowedUnderURorWLock" xml:space="preserve">
    <value>Esta operação não é permitida ao manter uma leitura atualizável ativa ou um bloqueio de gravação de um AsyncReaderWriterLock.</value>
  </data>
  <data name="SemaphoreMisused" xml:space="preserve">
    <value>Este sinal foi mal empregado e não pode mais ser usado.</value>
  </data>
  <data name="LockCompletionAlreadyRequested" xml:space="preserve">
    <value>Este bloqueio já foi marcado para conclusão.  Nenhum bloqueio de nível superior pode ser atendido.</value>
  </data>
  <data name="InvalidAfterCompleted" xml:space="preserve">
    <value>Transição já efetuada para o estado Concluído.</value>
  </data>
  <data name="FrameMustBePushedFirst" xml:space="preserve">
    <value>O push dessa instância deve ser efetuado primeiro.</value>
  </data>
  <data name="STAThreadCallerNotAllowed" xml:space="preserve">
    <value>Esta operação não pode ser concluída em um thread STA.</value>
  </data>
  <data name="ValueFactoryReentrancy" xml:space="preserve">
    <value>O alocador de valor chamou o valor na mesma instância.</value>
  </data>
  <data name="LazyValueNotCreated" xml:space="preserve">
    <value>O valor criado de forma lenta ainda não foi construído.</value>
  </data>
  <data name="AppliedSynchronizationContextNotAllowed" xml:space="preserve">
    <value>Não é permitido adquirir bloqueios em threads com SynchronizationContext aplicado.</value>
  </data>
  <data name="InvalidWithoutLock" xml:space="preserve">
    <value>É necessário um bloqueio.</value>
  </data>
  <data name="SemaphoreStackNestingViolated" xml:space="preserve">
    <value>Solicitações de semáforo aninhadas devem ser lançadas na ordem LIFO quando a configuração de novas entradas é: '{0}'</value>
  </data>
  <data name="DangerousReadLockRequestFromWriteLockFork" xml:space="preserve">
    <value>Solicitação perigosa para bloqueio de leitura na bifurcação do bloqueio de gravação.</value>
  </data>
  <data name="QueueEmpty" xml:space="preserve">
    <value>A fila está vazia.</value>
  </data>
  <data name="SyncContextNotSet" xml:space="preserve">
    <value>Não foi definido nenhum SynchronizationContext para acessar o thread principal.</value>
  </data>
</root>