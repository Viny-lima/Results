<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SyncContextFrameMismatchedAffinity" xml:space="preserve">
    <value>其他執行個體已在使用此框架。</value>
  </data>
  <data name="JoinableTaskContextAndCollectionMismatch" xml:space="preserve">
    <value>JoinableTask 不屬於此集合個體化所在的內容。</value>
  </data>
  <data name="LazyValueFaulted" xml:space="preserve">
    <value>建構期間，延遲建立的值發生錯誤。</value>
  </data>
  <data name="SwitchToMainThreadFailedToReachExpectedThread" xml:space="preserve">
    <value>嘗試切換至主要執行緒失敗，無法連接至預期的執行緒。JoinableTaskContext 是否在錯誤的執行緒上進行初始化，或具備之 SynchronizationContext 的 Post 方法在主要執行緒上未執行其委派?</value>
  </data>
  <data name="PushFromWrongThread" xml:space="preserve">
    <value>訊息提示只可從原始的執行緒執行。</value>
  </data>
  <data name="CannotUpgradeNonUpgradeableLock" xml:space="preserve">
    <value>呼叫者持有不可升級的讀取鎖定，所以無法升級。</value>
  </data>
  <data name="MultipleContinuationsNotSupported" xml:space="preserve">
    <value>不支援多個接續。</value>
  </data>
  <data name="WriteLockOutlived" xml:space="preserve">
    <value>寫入鎖定包含在巢狀讀取鎖定中，但不允許這麼做。</value>
  </data>
  <data name="JoinableTaskContextNodeAlreadyRegistered" xml:space="preserve">
    <value>此節點已註冊。</value>
  </data>
  <data name="InvalidLock" xml:space="preserve">
    <value>這項作業只能針對有效的鎖定執行。</value>
  </data>
  <data name="SemaphoreAlreadyHeld" xml:space="preserve">
    <value>旗號已保留，而且重新進入設定為 '{0}'。</value>
  </data>
  <data name="NotAllowedUnderURorWLock" xml:space="preserve">
    <value>從 AsyncReaderWriterLock 持有可升級的現用讀取或寫入鎖定期間，不允許執行這項作業。</value>
  </data>
  <data name="SemaphoreMisused" xml:space="preserve">
    <value>這個旗號曾經誤用，無法再使用。</value>
  </data>
  <data name="LockCompletionAlreadyRequested" xml:space="preserve">
    <value>此鎖定已標記為待完成。無法服務新的最上層鎖定。</value>
  </data>
  <data name="InvalidAfterCompleted" xml:space="preserve">
    <value>已轉換成「已完成」狀態。</value>
  </data>
  <data name="FrameMustBePushedFirst" xml:space="preserve">
    <value>必須先推送此執行個體。</value>
  </data>
  <data name="STAThreadCallerNotAllowed" xml:space="preserve">
    <value>無法對 STA 執行緒完成此作業。</value>
  </data>
  <data name="ValueFactoryReentrancy" xml:space="preserve">
    <value>值 Factory 需要相同執行個體上的值。</value>
  </data>
  <data name="LazyValueNotCreated" xml:space="preserve">
    <value>尚未建構延遲建立的值。</value>
  </data>
  <data name="AppliedSynchronizationContextNotAllowed" xml:space="preserve">
    <value>無法取得套用了 SynchronizationContext 的執行緒鎖定。</value>
  </data>
  <data name="InvalidWithoutLock" xml:space="preserve">
    <value>必須鎖定。</value>
  </data>
  <data name="SemaphoreStackNestingViolated" xml:space="preserve">
    <value>當重新進入設定是 '{0}' 時，巢狀旗號要求必須以 LIFO 順序發行</value>
  </data>
  <data name="DangerousReadLockRequestFromWriteLockFork" xml:space="preserve">
    <value>從寫入鎖定分岔要求讀取鎖定十分危險。</value>
  </data>
  <data name="QueueEmpty" xml:space="preserve">
    <value>此佇列是空的。</value>
  </data>
  <data name="SyncContextNotSet" xml:space="preserve">
    <value>未設定到達主要執行緒的 SynchronizationCoNtext。</value>
  </data>
</root>