<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SyncContextFrameMismatchedAffinity" xml:space="preserve">
    <value>Este marco ya se ha usado con otra instancia.</value>
  </data>
  <data name="JoinableTaskContextAndCollectionMismatch" xml:space="preserve">
    <value>JoinableTask no pertenece al contexto con el que se creó la instancia de esta colección.</value>
  </data>
  <data name="LazyValueFaulted" xml:space="preserve">
    <value>Error del valor creado de forma diferida durante la construcción.</value>
  </data>
  <data name="SwitchToMainThreadFailedToReachExpectedThread" xml:space="preserve">
    <value>No se pudo alcanzar el subproceso esperado a través del intento de cambio al subproceso principal. ¿Se inició JoinableTaskContext en el subproceso incorrecto o con un SynchronizationContext cuyo método de registro no ejecuta su delegado en el subproceso principal?</value>
  </data>
  <data name="PushFromWrongThread" xml:space="preserve">
    <value>El suministro de mensajes solo puede ejecutarse desde el subproceso original.</value>
  </data>
  <data name="CannotUpgradeNonUpgradeableLock" xml:space="preserve">
    <value>El llamador mantiene un bloqueo de lectura no actualizable y no se puede actualizar.</value>
  </data>
  <data name="MultipleContinuationsNotSupported" xml:space="preserve">
    <value>No se admiten varias continuaciones.</value>
  </data>
  <data name="WriteLockOutlived" xml:space="preserve">
    <value>Bloqueo de escritura realizado por un bloqueo de lectura anidado, lo cual no se permite.</value>
  </data>
  <data name="JoinableTaskContextNodeAlreadyRegistered" xml:space="preserve">
    <value>Este nodo ya está registrado.</value>
  </data>
  <data name="InvalidLock" xml:space="preserve">
    <value>Esta operación solamente se puede ejecutar con un bloqueo válido.</value>
  </data>
  <data name="SemaphoreAlreadyHeld" xml:space="preserve">
    <value>El semáforo ya se ha retenido y la configuración de reentrada es "{0}".</value>
  </data>
  <data name="NotAllowedUnderURorWLock" xml:space="preserve">
    <value>Esta operación no está permitida mientras se mantenga un bloqueo activo de lectura o escritura actualizable a través de un AsyncReaderWriterLock.</value>
  </data>
  <data name="SemaphoreMisused" xml:space="preserve">
    <value>Este semáforo se usó de forma incorrecta y ya no se puede utilizar.</value>
  </data>
  <data name="LockCompletionAlreadyRequested" xml:space="preserve">
    <value>Este bloqueo ya se ha marcado para su finalización.  No se pueden mantener nuevos bloqueos de nivel superior.</value>
  </data>
  <data name="InvalidAfterCompleted" xml:space="preserve">
    <value>Ya se ha realizado la transición al estado Completado.</value>
  </data>
  <data name="FrameMustBePushedFirst" xml:space="preserve">
    <value>Esta instancia se debe insertar primero.</value>
  </data>
  <data name="STAThreadCallerNotAllowed" xml:space="preserve">
    <value>Esta operación no se puede completar en un subproceso STA.</value>
  </data>
  <data name="ValueFactoryReentrancy" xml:space="preserve">
    <value>Este generador de valores ha llamado al valor en la misma instancia.</value>
  </data>
  <data name="LazyValueNotCreated" xml:space="preserve">
    <value>El valor creado de forma diferida no se ha construido aún.</value>
  </data>
  <data name="AppliedSynchronizationContextNotAllowed" xml:space="preserve">
    <value>No se permite adquirir bloqueos en subprocesos con un SynchronizationContext aplicado.</value>
  </data>
  <data name="InvalidWithoutLock" xml:space="preserve">
    <value>Se necesita un bloqueo.</value>
  </data>
  <data name="SemaphoreStackNestingViolated" xml:space="preserve">
    <value>Las solicitudes de semáforo anidadas deben liberarse en orden LIFO cuando el valor de reentrada es "{0}"</value>
  </data>
  <data name="DangerousReadLockRequestFromWriteLockFork" xml:space="preserve">
    <value>Solicitud peligrosa para bloqueo de lectura desde bifurcación de bloqueo de escritura.</value>
  </data>
  <data name="QueueEmpty" xml:space="preserve">
    <value>La cola está vacía.</value>
  </data>
  <data name="SyncContextNotSet" xml:space="preserve">
    <value>No se ha establecido ningún elemento SynchronizationContext para llegar al subproceso principal.</value>
  </data>
</root>