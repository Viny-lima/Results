<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SyncContextFrameMismatchedAffinity" xml:space="preserve">
    <value>Questo frame è già stato usato con un'istanza diversa.</value>
  </data>
  <data name="JoinableTaskContextAndCollectionMismatch" xml:space="preserve">
    <value>JoinableTask non appartiene al contesto con cui è stata creata un'istanza di questa raccolta.</value>
  </data>
  <data name="LazyValueFaulted" xml:space="preserve">
    <value>Si è verificato un errore durante la costruzione del valore creato in modo differito.</value>
  </data>
  <data name="SwitchToMainThreadFailedToReachExpectedThread" xml:space="preserve">
    <value>Un tentativo di passare al thread principale per raggiungere il thread previsto non è riuscito. JoinableTaskContext era inizializzato nel thread errato oppure con un elemento SynchronizationContext il cui metodo Post non esegue il relativo delegato nel thread principale?</value>
  </data>
  <data name="PushFromWrongThread" xml:space="preserve">
    <value>Il message pump può essere eseguito solo dal thread originale.</value>
  </data>
  <data name="CannotUpgradeNonUpgradeableLock" xml:space="preserve">
    <value>Il chiamante mantiene un blocco lettura non aggiornabile, di conseguenza non è possibile aggiornarlo.</value>
  </data>
  <data name="MultipleContinuationsNotSupported" xml:space="preserve">
    <value>Le continuazioni multiple non sono supportate.</value>
  </data>
  <data name="WriteLockOutlived" xml:space="preserve">
    <value>Il blocco di scrittura è sopravvissuto a un blocco di scrittura annidato. Questo comportamento non è consentito.</value>
  </data>
  <data name="JoinableTaskContextNodeAlreadyRegistered" xml:space="preserve">
    <value>Questo nodo è già registrato.</value>
  </data>
  <data name="InvalidLock" xml:space="preserve">
    <value>Questa operazione può essere eseguita solo su un blocco valido.</value>
  </data>
  <data name="SemaphoreAlreadyHeld" xml:space="preserve">
    <value>Il semaforo è già usato e l'opzione di reentrancy è '{0}'.</value>
  </data>
  <data name="NotAllowedUnderURorWLock" xml:space="preserve">
    <value>Questa operazione non è consentita quando si mantiene un blocco lettura o scrittura aggiornabile attivo da un elemento AsyncReaderWriterLock.</value>
  </data>
  <data name="SemaphoreMisused" xml:space="preserve">
    <value>Questo semaforo non è stato usato in modo corretto e non può più essere usato.</value>
  </data>
  <data name="LockCompletionAlreadyRequested" xml:space="preserve">
    <value>Questo blocco è già stato contrassegnato per il completamento.  Non è possibile eseguire nuovi blocchi di primo livello.</value>
  </data>
  <data name="InvalidAfterCompleted" xml:space="preserve">
    <value>Il passaggio allo stato Completato è già stato eseguito.</value>
  </data>
  <data name="FrameMustBePushedFirst" xml:space="preserve">
    <value>Il push di questa istanza deve essere effettuato per primo.</value>
  </data>
  <data name="STAThreadCallerNotAllowed" xml:space="preserve">
    <value>Non è possibile completare questa operazione su un thread STA.</value>
  </data>
  <data name="ValueFactoryReentrancy" xml:space="preserve">
    <value>La factory del valore ha richiesto il valore nella stessa istanza.</value>
  </data>
  <data name="LazyValueNotCreated" xml:space="preserve">
    <value>Il valore creato in modo differito non è stato ancora costruito.</value>
  </data>
  <data name="AppliedSynchronizationContextNotAllowed" xml:space="preserve">
    <value>Non è consentito acquisire blocchi su thread in cui è applicato un elemento SynchronizationContext.</value>
  </data>
  <data name="InvalidWithoutLock" xml:space="preserve">
    <value>È richiesto un blocco.</value>
  </data>
  <data name="SemaphoreStackNestingViolated" xml:space="preserve">
    <value>Le richieste di semaforo nidificate devono essere rilasciate in base all'ordine LIFO quando l'impostazione di rientranza è: '{0}'</value>
  </data>
  <data name="DangerousReadLockRequestFromWriteLockFork" xml:space="preserve">
    <value>La biforcazione del blocco scrittura ha effettuato una richiesta pericolosa per il blocco lettura.</value>
  </data>
  <data name="QueueEmpty" xml:space="preserve">
    <value>La coda è vuota.</value>
  </data>
  <data name="SyncContextNotSet" xml:space="preserve">
    <value>Non è stato impostato alcun elemento SynchronizationContext per raggiungere il thread principale.</value>
  </data>
</root>